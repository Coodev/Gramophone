package com.orobator.android.gramophone.view.fragments;import android.app.Fragment;import android.graphics.Bitmap;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.util.DisplayMetrics;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.SeekBar;import com.orobator.android.gramophone.R;import com.orobator.android.gramophone.model.Song;public class NowPlayingFragment extends Fragment {    private static final String TAG = "NowPlayingFragment";    Bitmap mAlbumCover;    private Song mSong;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setRetainInstance(true);        mSong = (Song) getActivity().getIntent().getSerializableExtra(Song.KEY_SONG);    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.fragment_now_playing, parent, false);        DisplayMetrics metrics = new DisplayMetrics();        getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);        ImageView albumArtImageView = (ImageView) view.findViewById(R.id.album_art_imageView);        albumArtImageView.setMinimumHeight(metrics.widthPixels);        albumArtImageView.setMaxHeight(metrics.widthPixels);        if (mSong.hasArtwork()) {            mAlbumCover = mSong.getArtwork();        } else {            Log.d(TAG, mSong.getTitle() + " - " + mSong.getArtist() + " has no album art");            mAlbumCover = ((BitmapDrawable) getResources().getDrawable(R.drawable.replacement_album_art)).getBitmap();        }        double scaleFactor = (metrics.widthPixels * 1.0) / mAlbumCover.getHeight();        Double scaledWidth = new Double(scaleFactor * mAlbumCover.getWidth());        int dstHeight = metrics.widthPixels;        int dstWidth = scaledWidth.intValue();        mAlbumCover = Bitmap.createScaledBitmap(mAlbumCover, dstWidth, dstHeight, true);        albumArtImageView.setImageBitmap(mAlbumCover);        SeekBar nowPlayingSeekBar = (SeekBar) view.findViewById(R.id.nowPlaying_seekBar);        int seekBarHeight = nowPlayingSeekBar.getHeight();        int seekBarBottom = nowPlayingSeekBar.getBottom();        Log.d(TAG, "Seekbar height: " + seekBarHeight);        Log.d(TAG, "Seekbar bottom: " + seekBarBottom);        nowPlayingSeekBar.setBottom(seekBarBottom - (seekBarHeight / 2));        Log.d(TAG, "Seekbar height: " + nowPlayingSeekBar.getHeight());        Log.d(TAG, "Seekbar bottom: " + nowPlayingSeekBar.getBottom());        return view;    }}