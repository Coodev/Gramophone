package com.orobator.android.gramophone.view.fragments;import android.graphics.Bitmap;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.DisplayMetrics;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.orobator.android.gramophone.R;import com.orobator.android.gramophone.model.Song;public class NowPlayingFragment extends Fragment {    private static final String TAG = "NowPlayingFragment";    Bitmap mAlbumCover;    private Song mSong;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        Bundle args = getArguments();        mSong = (Song) args.getSerializable(Song.KEY_SONG);    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.fragment_now_playing, parent, false);        DisplayMetrics metrics = new DisplayMetrics();        getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);        if (view != null) {            view.setBackgroundColor(mSong.getBackgroundColor());        }        ImageView albumArtImageView = (ImageView) view.findViewById(R.id.nowPlayingAlbumArt_imageView);        albumArtImageView.setMinimumHeight(metrics.widthPixels);        albumArtImageView.setMaxHeight(metrics.widthPixels);        if (mSong.hasArtwork()) {            mAlbumCover = mSong.getArtwork();        } else {            Log.d(TAG, mSong.getTitle() + " - " + mSong.getArtist() + " has no album art");            mAlbumCover = ((BitmapDrawable) getResources().getDrawable(R.drawable.replacement_album_art)).getBitmap();        }        double scaleFactor = (metrics.widthPixels * 1.0) / mAlbumCover.getHeight();        Double scaledWidth = new Double(scaleFactor * mAlbumCover.getWidth());        int dstHeight = metrics.widthPixels;        int dstWidth = scaledWidth.intValue();        mAlbumCover = Bitmap.createScaledBitmap(mAlbumCover, dstWidth, dstHeight, true);        albumArtImageView.setImageBitmap(mAlbumCover);        TextView songTitleTextView = (TextView) view.findViewById(R.id.nowPlayingTitle_textView);        songTitleTextView.setText(mSong.getTitle());        songTitleTextView.setTextColor(mSong.getPrimaryColor());        songTitleTextView.setSelected(true);        TextView artistAlbumTextView = (TextView) view.findViewById(R.id.nowPlayingArtistAlbum_textView);        artistAlbumTextView.setText(mSong.getArtist() + " - " + mSong.getAlbum());        artistAlbumTextView.setTextColor(mSong.getSecondaryColor());        artistAlbumTextView.setSelected(true);        TextView timePlayedTextView = (TextView) view.findViewById(R.id.nowPlayingTimePlayed_textView);//        timePlayedTextView.setText("0:00");        timePlayedTextView.setTextColor(mSong.getDetailColor());        timePlayedTextView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Toast toast = Toast.makeText(getActivity(), "timePlayedTextView", Toast.LENGTH_SHORT);                toast.show();            }        });        TextView timeLeftTextView = (TextView) view.findViewById(R.id.nowPlayingTimeLeft_textView);        timeLeftTextView.setText(mSong.displayTime(mSong.getDuration(), false));        timeLeftTextView.setTextColor(mSong.getDetailColor());        timeLeftTextView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Toast toast = Toast.makeText(getActivity(), "timeLeftTextView", Toast.LENGTH_SHORT);                toast.show();            }        });        return view;    }}