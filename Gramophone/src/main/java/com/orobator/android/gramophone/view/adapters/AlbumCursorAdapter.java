package com.orobator.android.gramophone.view.adapters;import android.content.Context;import android.database.Cursor;import android.support.v4.widget.CursorAdapter;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.SectionIndexer;import android.widget.TextView;import com.orobator.android.gramophone.R;import com.orobator.android.gramophone.model.Album;import com.orobator.android.gramophone.model.SongDatabaseHelper.AlbumCursor;import java.util.HashMap;import java.util.Vector;public class AlbumCursorAdapter extends CursorAdapter implements SectionIndexer {    private static final String TAG = "AlbumCursorAdapter";    public static final String KEY_ALBUM_NAME = "album name";    public static final String KEY_ALBUM_ARTIST = "album artist";    private Vector<String> mSections;    private HashMap<String, Integer> sectionMap;    private AlbumCursor mAlbumCursor;    public AlbumCursorAdapter(Context context, AlbumCursor cursor) {        super(context, cursor, 0);        mAlbumCursor = cursor;        mSections = new Vector<String>();        sectionMap = new HashMap<String, Integer>();        initializeSections();    }    private void initializeSections() {        mAlbumCursor.moveToFirst();        while (!mAlbumCursor.isAfterLast()) {            String title = mAlbumCursor.getAlbum().getAlbumName();            String firstLetter = title.substring(0, 1).toUpperCase();            Integer myInt = Integer.getInteger(firstLetter);            if (myInt != null) {                firstLetter = "123";            }            if (!sectionMap.containsKey(firstLetter)) {                if (startsWithAlphaNum(firstLetter)) {                    sectionMap.put(firstLetter, mAlbumCursor.getPosition());                    mSections.add(firstLetter);                }            }            mAlbumCursor.moveToNext();        }    }    private boolean startsWithAlphaNum(String str) {        if (str == null) return false;        // TODO Clean up code with REGEX        return !(str.toLowerCase().startsWith("~")                || str.toLowerCase().startsWith("!")                || str.toLowerCase().startsWith("@")                || str.toLowerCase().startsWith("#")                || str.toLowerCase().startsWith("$")                || str.toLowerCase().startsWith("%")                || str.toLowerCase().startsWith("^")                || str.toLowerCase().startsWith("&")                || str.toLowerCase().startsWith("*")                || str.toLowerCase().startsWith("(")                || str.toLowerCase().startsWith(")")                || str.toLowerCase().startsWith("_")                || str.toLowerCase().startsWith("-")                || str.toLowerCase().startsWith("+")                || str.toLowerCase().startsWith("=")                || str.toLowerCase().startsWith("`")                || str.toLowerCase().startsWith("[")                || str.toLowerCase().startsWith("]")                || str.toLowerCase().startsWith("{")                || str.toLowerCase().startsWith("}")                || str.toLowerCase().startsWith("\\")                || str.toLowerCase().startsWith("|")                || str.toLowerCase().startsWith(":")                || str.toLowerCase().startsWith(";")                || str.toLowerCase().startsWith("'")                || str.toLowerCase().startsWith("\"")                || str.toLowerCase().startsWith("<")                || str.toLowerCase().startsWith(">")                || str.toLowerCase().startsWith(",")                || str.toLowerCase().startsWith(".")                || str.toLowerCase().startsWith("?")                || str.toLowerCase().startsWith("/"));    }    public int getSize() {        return mAlbumCursor.getCount();    }    @Override    public Object getItem(int position) {        mAlbumCursor.moveToPosition(position);        return mAlbumCursor.getAlbum();    }    @Override    public Object[] getSections() {        return mSections.toArray();    }    @Override    public int getPositionForSection(int section) {        return sectionMap.get(mSections.get(section));    }    @Override    public View newView(Context context, Cursor cursor, ViewGroup parent) {        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);        return inflater.inflate(R.layout.list_item_album, parent, false);    }    @Override    public void bindView(View view, Context context, Cursor cursor) {        Album album = mAlbumCursor.getAlbum();        TextView albumTitleTextView = (TextView) view.findViewById(R.id.albumTitle_textView);        TextView albumArtistTextView = (TextView) view.findViewById(R.id.albumArtist_textView);        albumTitleTextView.setText(album.getAlbumName());        albumArtistTextView.setText(album.getAlbumArtist());    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        mAlbumCursor.moveToPosition(position);        Album album = mAlbumCursor.getAlbum();        if (convertView == null) {            LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);            convertView = inflater.inflate(R.layout.list_item_album, null);            ViewHolder holder = new ViewHolder();            holder.albumTitleTextView = (TextView) convertView.findViewById(R.id.albumTitle_textView);            holder.albumArtistTextView = (TextView) convertView.findViewById(R.id.albumArtist_textView);            convertView.setTag(holder);        }        ViewHolder holder = (ViewHolder) convertView.getTag();        holder.albumTitleTextView.setText(album.getAlbumName());        holder.albumArtistTextView.setText(album.getAlbumArtist());        return convertView;    }    @Override    public int getSectionForPosition(int position) {        mAlbumCursor.moveToPosition(position);        Album album = mAlbumCursor.getAlbum();        String title = album.getAlbumName();        String firstLetter = title.substring(0, 1);        for (int i = 0; i < mSections.size(); i++) {            if (firstLetter.equals(mSections.get(i))) {                return i;            }        }        return 0;    }    static class ViewHolder {        TextView albumTitleTextView;        TextView albumArtistTextView;    }}