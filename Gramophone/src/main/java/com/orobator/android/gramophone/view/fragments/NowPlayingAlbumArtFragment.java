package com.orobator.android.gramophone.view.fragments;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.drawable.BitmapDrawable;import android.os.Bundle;import android.support.v4.app.Fragment;import android.util.DisplayMetrics;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageButton;import com.orobator.android.gramophone.R;import com.orobator.android.gramophone.controller.services.MusicPlayerService;import com.orobator.android.gramophone.model.Song;public class NowPlayingAlbumArtFragment extends Fragment {    private static final String TAG = "NowPlayingAlbumArtFragment";    private Bitmap mAlbumCover;    private Song mSong;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        Bundle args = getArguments();        mSong = (Song) args.getSerializable(Song.KEY_SONG);    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.image_button_now_playing_album_art, parent, false);        DisplayMetrics metrics = new DisplayMetrics();        getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);        ImageButton albumArtImageButton = (ImageButton) view.findViewById(R.id.nowPlayingAlbumArt_imageView);        albumArtImageButton.setMinimumHeight(metrics.widthPixels);        albumArtImageButton.setMaxHeight(metrics.widthPixels);        albumArtImageButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent playbackToggleIntent = new Intent(MusicPlayerService.ACTION_TOGGLE_PLAYBACK);                playbackToggleIntent.setClass(getActivity().getApplicationContext(), MusicPlayerService.class);                getActivity().startService(playbackToggleIntent);            }        });        if (mSong.hasArtwork()) {            mAlbumCover = mSong.getArtwork();        } else {            mAlbumCover = ((BitmapDrawable) getResources().getDrawable(R.drawable.replacement_album_art)).getBitmap();        }        double scaleFactor = (metrics.widthPixels * 1.0) / mAlbumCover.getHeight();        Double scaledWidth = new Double(scaleFactor * mAlbumCover.getWidth());        int dstHeight = metrics.widthPixels;        int dstWidth = scaledWidth.intValue();        mAlbumCover = Bitmap.createScaledBitmap(mAlbumCover, dstWidth, dstHeight, true);        albumArtImageButton.setImageBitmap(mAlbumCover);        view.setMinimumHeight(metrics.widthPixels);        Log.d(TAG, "Height: " + view.getHeight());        return view;    }}